from pathlib import Path
import sys
path_root = Path(__file__).parents[4]
sys.path.append(str(path_root))


from myLib.build.lib.Datastructures.heap.MinH import MinH
from myLib.build.lib.Datastructures.heap.MaxH import MaxH
from myLib.build.lib.Datastructures.heap.Heap import Heap

print("-------------------------TEST FOR MINIMUM HEAP DATA STRUCTURE-------------------------\n")

minimum = MinH()
print("\nInserting into the Heap--")
minimum.insert(5)
minimum.insert(3)
minimum.insert(7)
minimum.insert(1)
minimum.insert(9)
minimum.print()
print("\nGetting the size of the heap--")
minimum.getSize()
minimum.print()
print("Checking if the heap is empty--")
minimum.isEmpty()
print("\nChecking if the heap contains and integer(first 3 and then 8)--")
minimum.contains(3)
minimum.contains(8)
print("\nClearing the heap--")
minimum.clear()
minimum.print()
print("\nGetting the size of the heap and checking if it is empty--")
minimum.getSize()
minimum.isEmpty()
minimum.print()
print("\nInserting into the Heap--")
minimum.insert(8)
minimum.insert(2)
minimum.insert(6)
minimum.insert(4)
minimum.insert(9)
minimum.insert(1)
minimum.print()
print("Deleting from the heap--")
minimum.delete(6)
minimum.delete(4)
minimum.delete(8)
minimum.print()
print("\nChecking if the heap contains a deleted integer 6--")
minimum.contains(6)
minimum.print()
print("\nSorting the heap--")
minimum.sort()
minimum.print()

print("\n-------------------------TEST FOR MAXIMUM HEAP LIST DATA STRUCTURE-------------------------")

maximum = MaxH([5, 3, 7, 1, 9])
maximum.print()
print("\nInserting into the Heap--")
maximum.insert(16)
maximum.print()
print("\nDeleting from the Heap--")
maximum.delete(7)
maximum.print()
print("\nSorting the Heap--")
maximum.sort()
maximum.print()
print("\nChecking if the heap contains a deleted integer 6--")
maximum.contains(7)
maximum.print()
print("\nChecking if the heap is empty--")
maximum.isEmpty()
print("\nGetting the size of the heap--")
maximum.getSize()
maximum.print()
print("\nClearing the heap--")
maximum.clear()
maximum.print()
print("\nGetting the size of the heap and checking if it is empty after clearing--")
minimum.getSize()
minimum.isEmpty()

print("\n-------------------------------------------------------------END-------------------------------------------------------------\n")